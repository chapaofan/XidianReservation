<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xidian.reservation.dao.ReserveMapper">
    <resultMap id="BaseResultMap" type="com.xidian.reservation.entity.Reserve">
        <id column="reserve_id" property="reserveId" jdbcType="INTEGER"/>
        <result column="consumer_id" property="consumerId" jdbcType="BIGINT"/>
        <result column="reserve_name" property="reserveName" jdbcType="VARCHAR"/>
        <result column="room_name" property="roomName" jdbcType="VARCHAR"/>
        <result column="reserve_tel" property="reserveTel" jdbcType="BIGINT"/>
        <result column="reserve_date" property="reserveDate" jdbcType="DATE"/>
        <result column="reserve_start" property="reserveStart" jdbcType="TIME"/>
        <result column="reserve_end" property="reserveEnd" jdbcType="TIME"/>
        <result column="reserve_purpose" property="reservePurpose" jdbcType="VARCHAR"/>
        <result column="reserve_status" property="reserveStatus" jdbcType="INTEGER"/>
        <result column="open_pwd" property="openPwd" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        reserve_id, consumer_id, reserve_name, room_name, reserve_tel, reserve_date, reserve_start,
    reserve_end, reserve_purpose, reserve_status,open_pwd
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from reserve
        where reserve_id = #{reserveId,jdbcType=INTEGER}
    </select>

    <select id="selectNotAllowTime" resultMap="BaseResultMap">
        SELECT reserve_id,
               consumer_id,
               reserve_name,
               reserve.room_name,
               reserve_tel,
               reserve_date,
               reserve_start,
               reserve_end,
               reserve_purpose,
               reserve_status,
               open_pwd
        FROM reserve,
             room
        WHERE reserve.reserve_date = DATE_FORMAT(#{reserveDate,jdbcType=DATE}, '%Y-%m-%d')
          AND (reserve_status = 0 OR reserve_status = 100)
          AND reserve.room_name = (SELECT room.room_name FROM room WHERE room.room_id = #{roomId,jdbcType=INTEGER})
          AND reserve.reserve_id != #{reserveId,jdbcType=INTEGER}
    </select>
    <select id="findHistoryReserveByConsumerId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reserve
        WHERE
        consumer_id = #{consumerId,jdbcType=BIGINT}
        AND (
        DATEDIFF(reserve_date,DATE_FORMAT( NOW(), '%Y-%m-%d' )) &lt; 0
        OR ( DATE_FORMAT( NOW(), '%Y-%m-%d' ) = reserve_date AND TIMEDIFF( DATE_FORMAT( NOW(), '%H:%i:%s' ), reserve_end )> 0 )
        OR reserve_status = 200
        OR reserve_status = 500
        )
        ORDER BY
        reserve_date DESC,
        FIELD( reserve_status, 100, 500, 200, 0 ),
        reserve_start DESC

    </select>
    <select id="findNotStartReserveByConsumer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reserve
        WHERE
        consumer_id = #{consumerId,jdbcType=BIGINT}
        AND ( reserve_status = 100 OR reserve_status = 0 )
        AND (
        ( DATEDIFF( reserve_date, DATE_FORMAT( NOW(), '%Y-%m-%d' ) )> 0 AND DATEDIFF( reserve_date, DATE_FORMAT( NOW(), '%Y-%m-%d' )) &lt;= 7 )
        OR ( ( DATE_FORMAT( NOW(), '%Y-%m-%d' ) = reserve_date AND TIMEDIFF( reserve_end, DATE_FORMAT( NOW(), '%H:%i:%s' ) )> 0 ) )
        )
        ORDER BY
        reserve_date,
        reserve_start
    </select>
    <select id="findNotStartAndStatus0" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reserve
        WHERE
        (
        DATEDIFF( reserve_date, DATE_FORMAT( NOW(), '%Y-%m-%d' ) ) > 0
        OR (
        (
        DATE_FORMAT( NOW(), '%Y-%m-%d' ) = reserve_date
        AND TIMEDIFF( reserve_end, DATE_FORMAT( NOW(), '%H:%i:%s' ) )> 0
        )
        )
        )
        ORDER BY
        reserve_status,
        reserve_date
    </select>
    <select id="findNotStartAndStatus0ByRoom" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        reserve
        WHERE
        room_name = #{roomName,jdbcType=VARCHAR}
        AND
        (
        DATEDIFF( reserve_date, DATE_FORMAT( NOW(), '%Y-%m-%d' ) ) > 0
        OR (
        (
        DATE_FORMAT( NOW(), '%Y-%m-%d' ) = reserve_date
        AND (
        TIMEDIFF( DATE_FORMAT( NOW(), '%H:%i:%s' ), reserve_start )) > 0
        AND TIMEDIFF( reserve_end, DATE_FORMAT( NOW(), '%H:%i:%s' ) )> 0
        )
        )
        )
        ORDER BY
        reserve_status ,reserve_date
    </select>
    <select id="findByDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM reserve
        WHERE reserve_date = DATE_FORMAT(#{reserveDate,jdbcType=DATE}, '%Y-%m-%d')
    </select>
    <select id="findReserveByDateTime" resultMap="BaseResultMap">
        SELECT DISTINCT reserve.reserve_id,
                        reserve.consumer_id,
                        reserve.reserve_name,
                        reserve.room_name,
                        reserve.reserve_tel,
                        reserve.reserve_date,
                        reserve.reserve_start,
                        reserve.reserve_end,
                        reserve.reserve_purpose,
                        reserve.reserve_status,
                        reserve.open_pwd
        FROM reserve,
             room
        WHERE reserve_date = DATE_FORMAT(#{reserveDate,jdbcType=DATE}, '%Y-%m-%d')
          AND reserve_status = 100
          AND (
                (
                            TIMEDIFF(reserve_start, CONCAT_WS('', #{startTime,jdbcType=VARCHAR}, ':00')) &gt;= 0
                        AND
                            TIMEDIFF(reserve_end, CONCAT_WS('', #{endTime,jdbcType=VARCHAR}, ':00')) &lt;= 0
                    )
                OR
                (
                            TIMEDIFF(reserve_end, CONCAT_WS('', #{endTime,jdbcType=VARCHAR}, ':00')) &lt;= 0
                        AND
                            TIMEDIFF(reserve_end, CONCAT_WS('', #{startTime,jdbcType=VARCHAR}, ':15')) &gt;= 0
                    )
                OR
                (
                            TIMEDIFF(reserve_start, CONCAT_WS('', #{startTime,jdbcType=VARCHAR}, ':45')) &lt;= 0
                        AND
                            TIMEDIFF(reserve_start, CONCAT_WS('', #{startTime,jdbcType=VARCHAR}, ':00')) &gt;= 0
                    )
                OR
                (
                            TIMEDIFF(reserve_start, CONCAT_WS('', #{startTime,jdbcType=VARCHAR}, ':00')) &lt;= 0
                        AND
                            TIMEDIFF(reserve_end, CONCAT_WS('', #{endTime,jdbcType=VARCHAR}, ':00')) &gt;= 0
                    )
            )
          AND reserve.room_name = (
            SELECT room.room_name
            FROM room
            WHERE room_id = #{roomId,jdbcType=INTEGER})
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from reserve
        where reserve_id = #{reserveId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.xidian.reservation.entity.Reserve" useGeneratedKeys="true"
            keyProperty="reserveId">
        insert into reserve (reserve_id, consumer_id, reserve_name,
                             room_name, reserve_tel, reserve_date,
                             reserve_start, reserve_end, reserve_purpose,
                             reserve_status, open_pwd)
        values (#{reserveId,jdbcType=INTEGER}, #{consumerId,jdbcType=BIGINT}, #{reserveName,jdbcType=VARCHAR},
                #{roomName,jdbcType=VARCHAR}, #{reserveTel,jdbcType=BIGINT}, #{reserveDate,jdbcType=DATE},
                #{reserveStart,jdbcType=TIME}, #{reserveEnd,jdbcType=TIME}, #{reservePurpose,jdbcType=VARCHAR},
                #{reserveStatus,jdbcType=INTEGER}, #{openPwd,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xidian.reservation.entity.Reserve">
        insert into reserve
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="reserveId != null">
                reserve_id,
            </if>
            <if test="consumerId != null">
                consumer_id,
            </if>
            <if test="reserveName != null">
                reserve_name,
            </if>
            <if test="roomName != null">
                room_name,
            </if>
            <if test="reserveTel != null">
                reserve_tel,
            </if>
            <if test="reserveDate != null">
                reserve_date,
            </if>
            <if test="reserveStart != null">
                reserve_start,
            </if>
            <if test="reserveEnd != null">
                reserve_end,
            </if>
            <if test="reservePurpose != null">
                reserve_purpose,
            </if>
            <if test="reserveStatus != null">
                reserve_status,
            </if>
            <if test="openPwd != null">
                open_pwd,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="reserveId != null">
                #{reserveId,jdbcType=INTEGER},
            </if>
            <if test="consumerId != null">
                #{consumerId,jdbcType=BIGINT},
            </if>
            <if test="reserveName != null">
                #{reserveName,jdbcType=VARCHAR},
            </if>
            <if test="roomName != null">
                #{roomName,jdbcType=VARCHAR},
            </if>
            <if test="reserveTel != null">
                #{reserveTel,jdbcType=BIGINT},
            </if>
            <if test="reserveDate != null">
                #{reserveDate,jdbcType=DATE},
            </if>
            <if test="reserveStart != null">
                #{reserveStart,jdbcType=TIME},
            </if>
            <if test="reserveEnd != null">
                #{reserveEnd,jdbcType=TIME},
            </if>
            <if test="reservePurpose != null">
                #{reservePurpose,jdbcType=VARCHAR},
            </if>
            <if test="reserveStatus != null">
                #{reserveStatus,jdbcType=INTEGER},
            </if>
            <if test="openPwd != null">
                #{openPwd,jdbcType=VARCHAR},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xidian.reservation.entity.Reserve">
        update reserve
        <set>
            <if test="consumerId != null">
                consumer_id = #{consumerId,jdbcType=BIGINT},
            </if>
            <if test="reserveName != null">
                reserve_name = #{reserveName,jdbcType=VARCHAR},
            </if>
            <if test="roomName != null">
                room_name = #{roomName,jdbcType=VARCHAR},
            </if>
            <if test="reserveTel != null">
                reserve_tel = #{reserveTel,jdbcType=BIGINT},
            </if>
            <if test="reserveDate != null">
                reserve_date = #{reserveDate,jdbcType=DATE},
            </if>
            <if test="reserveStart != null">
                reserve_start = #{reserveStart,jdbcType=TIME},
            </if>
            <if test="reserveEnd != null">
                reserve_end = #{reserveEnd,jdbcType=TIME},
            </if>
            <if test="reservePurpose != null">
                reserve_purpose = #{reservePurpose,jdbcType=VARCHAR},
            </if>
            <if test="reserveStatus != null">
                reserve_status = #{reserveStatus,jdbcType=INTEGER},
            </if>
            <if test="openPwd != null">
                open_pwd = #{openPwd,jdbcType=VARCHAR},
            </if>

        </set>
        where reserve_id = #{reserveId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xidian.reservation.entity.Reserve">
        update reserve
        set consumer_id     = #{consumerId,jdbcType=BIGINT},
            reserve_name    = #{reserveName,jdbcType=VARCHAR},
            room_name       = #{roomName,jdbcType=VARCHAR},
            reserve_tel     = #{reserveTel,jdbcType=BIGINT},
            reserve_date    = #{reserveDate,jdbcType=DATE},
            reserve_start   = #{reserveStart,jdbcType=TIME},
            reserve_end     = #{reserveEnd,jdbcType=TIME},
            reserve_purpose = #{reservePurpose,jdbcType=VARCHAR},
            reserve_status  = #{reserveStatus,jdbcType=INTEGER},
            open_pwd        = #{openPwd,jdbcType=VARCHAR}
        where reserve_id = #{reserveId,jdbcType=INTEGER}
    </update>
</mapper>